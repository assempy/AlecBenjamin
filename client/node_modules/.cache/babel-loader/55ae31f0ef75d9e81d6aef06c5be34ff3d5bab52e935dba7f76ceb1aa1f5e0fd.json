{"ast":null,"code":"import'./style.css';import React from'react';import{useState}from'react';import{useEffect}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Header(){const navigate=useNavigate();const[searchQuery,setSearchQuery]=useState(\"\");// Для хранения поискового запроса\nconst[songs,setSongs]=useState([]);// Для хранения списка песен\nconst[currentPage,setCurrentPage]=useState(1);// Для текущей страницы\nconst[totalPages,setTotalPages]=useState(1);// Для количества страниц\nconst[error,setError]=useState(\"\");// Для ошибок, если что-то пойдет не так\n// Функция для отправки запросов с Fetch API\nconst fetchSongs=async()=>{try{// Отправляем запрос с поисковым запросом и пагинацией\nconst response=await fetch(\"http://localhost:5000/?page=\".concat(currentPage,\"&search=\").concat(searchQuery));if(!response.ok){throw new Error('Ошибка загрузки данных');}// Обрабатываем данные в формате JSON\nconst data=await response.json();setSongs(data.songs);// Обновляем состояние с песнями\nsetTotalPages(data.totalPages);// Обновляем количество страниц\n}catch(error){setError(error.message);// Устанавливаем ошибку, если что-то пошло не так\n}};useEffect(()=>{fetchSongs();// Запрашиваем песни при изменении searchQuery или currentPage\n},[searchQuery,currentPage]);useEffect(()=>{// Обновляем URL, когда изменяется searchQuery или currentPage\nnavigate(\"/search?query=\".concat(searchQuery,\"&page=\").concat(currentPage));},[searchQuery,currentPage,navigate]);const goBack=()=>{setCurrentPage(prevPage=>Math.max(prevPage-1,1));// Переход на предыдущую страницу данных\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"Header\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsx(\"img\",{src:\"image.png\",style:{height:\"37px\",marginTop:\"15px\"},alt:\"Logo\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:\"white\",fontSize:\"20px\",marginLeft:\"10px\"},children:\"Promote your music\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsx(\"button\",{onClick:goBack// Переход на предыдущую страницу данных\n,style:{marginTop:\"20px\",marginRight:\"10px\",height:\"30px\",width:\"80px\",borderRadius:\"20px\",cursor:\"pointer\",backgroundColor:\"white\",color:\"black\",border:\"none\"},children:\"Go back\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search for a song\",value:searchQuery,onChange:e=>setSearchQuery(e.target.value)// Обновляем состояние поиска\n,style:{width:\"243px\",height:\"33px\",marginTop:\"15px\",marginRight:\"20px\"}})]}),error&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsx(\"div\",{children:songs.map((song,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:song.title}),/*#__PURE__*/_jsx(\"p\",{children:song.album})]},index))}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Page \",currentPage,\" of \",totalPages]})})]});}export default Header;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","Header","navigate","searchQuery","setSearchQuery","songs","setSongs","currentPage","setCurrentPage","totalPages","setTotalPages","error","setError","fetchSongs","response","fetch","concat","ok","Error","data","json","message","goBack","prevPage","Math","max","className","children","style","display","src","height","marginTop","alt","color","fontSize","marginLeft","onClick","marginRight","width","borderRadius","cursor","backgroundColor","border","type","placeholder","value","onChange","e","target","map","song","index","title","album"],"sources":["C:/Users/user/Desktop/web_react/client/src/header.jsx"],"sourcesContent":["import './style.css';\r\nimport React from 'react';\r\nimport { useState} from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    const navigate = useNavigate();\r\n    const [searchQuery, setSearchQuery] = useState(\"\"); // Для хранения поискового запроса\r\n    const [songs, setSongs] = useState([]); // Для хранения списка песен\r\n    const [currentPage, setCurrentPage] = useState(1); // Для текущей страницы\r\n    const [totalPages, setTotalPages] = useState(1); // Для количества страниц\r\n    const [error, setError] = useState(\"\"); // Для ошибок, если что-то пойдет не так\r\n\r\n    // Функция для отправки запросов с Fetch API\r\n    const fetchSongs = async () => {\r\n        try {\r\n            // Отправляем запрос с поисковым запросом и пагинацией\r\n            const response = await fetch(`http://localhost:5000/?page=${currentPage}&search=${searchQuery}`);\r\n            \r\n            if (!response.ok) {\r\n                throw new Error('Ошибка загрузки данных');\r\n            }\r\n\r\n            // Обрабатываем данные в формате JSON\r\n            const data = await response.json();\r\n            setSongs(data.songs); // Обновляем состояние с песнями\r\n            setTotalPages(data.totalPages); // Обновляем количество страниц\r\n        } catch (error) {\r\n            setError(error.message); // Устанавливаем ошибку, если что-то пошло не так\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchSongs(); // Запрашиваем песни при изменении searchQuery или currentPage\r\n    }, [searchQuery, currentPage]);\r\n\r\n    useEffect(() => {\r\n        // Обновляем URL, когда изменяется searchQuery или currentPage\r\n        navigate(`/search?query=${searchQuery}&page=${currentPage}`);\r\n    }, [searchQuery, currentPage, navigate]);\r\n\r\n    const goBack = () => {\r\n        setCurrentPage((prevPage) => Math.max(prevPage - 1, 1)); // Переход на предыдущую страницу данных\r\n    };\r\n\r\n    return (\r\n        <div className=\"Header\">\r\n            <div style={{ display: \"flex\" }}>\r\n                <img src=\"image.png\" style={{ height: \"37px\", marginTop: \"15px\" }} alt=\"Logo\" />\r\n                <p style={{ color: \"white\", fontSize: \"20px\", marginLeft: \"10px\" }}>Promote your music</p>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <button \r\n                    onClick={goBack} // Переход на предыдущую страницу данных\r\n                    style={{\r\n                        marginTop: \"20px\",\r\n                        marginRight: \"10px\",\r\n                        height: \"30px\",\r\n                        width: \"80px\",\r\n                        borderRadius: \"20px\",\r\n                        cursor: \"pointer\",\r\n                        backgroundColor: \"white\",\r\n                        color: \"black\",\r\n                        border: \"none\"\r\n                    }}\r\n                >\r\n                    Go back\r\n                </button>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Search for a song\" \r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)} // Обновляем состояние поиска\r\n                    style={{\r\n                        width: \"243px\", \r\n                        height: \"33px\", \r\n                        marginTop: \"15px\", \r\n                        marginRight: \"20px\"\r\n                    }} \r\n                />\r\n            </div>\r\n\r\n            {/* Выводим ошибки, если они есть */}\r\n            {error && <div style={{ color: 'red' }}>{error}</div>}\r\n\r\n            {/* Выводим песни */}\r\n            <div>\r\n                {songs.map((song, index) => (\r\n                    <div key={index}>\r\n                        <h3>{song.title}</h3>\r\n                        <p>{song.album}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Пагинация */}\r\n            <div>\r\n                <span>Page {currentPage} of {totalPages}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}